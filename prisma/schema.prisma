// This is your Prisma schema file
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Place {
  id          String    @id @default(cuid())
  name        String?
  description String?
  state       String
  city        String
  country     String?
  category    String?
  imageUrl    String?
  image       Json?
  type        PlaceType @default(VISITED) // VISITED or WISHLIST
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  votes       Vote[]
  wishlistItems WishlistItem[] // Back-reference for places added to wishlists
  user        User      @relation(fields: [userId], references: [id])

  @@index([state])
  @@index([city])
  @@index([category])
}

model User {
  id        String   @id @default(cuid())
  clerkId   String?  @unique
  email     String   @unique
  name      String?
  profileUrl    String?
  coverPhotoUrl String?
  createdAt DateTime @default(now())
  places    Place[]
  votes     Vote[]
  wishlist  WishlistItem[]  // Back-reference to wishlist items
}

model Vote {
  id        String   @id @default(cuid())
  placeId   String
  userId    String
  createdAt DateTime @default(now())
  place     Place    @relation(fields: [placeId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([placeId, userId])
}


model WishlistItem {
  id        String   @id @default(cuid())
  placeId   String
  userId    String
  notes     String?  // Optional user notes for the wishlist
  createdAt DateTime @default(now())
  place     Place    @relation(fields: [placeId], references: [id]) // Link to the Place model
  user      User     @relation(fields: [userId], references: [id]) // Link to the User model

  @@unique([placeId, userId]) // Prevent duplicates for the same user and place
}

// Enum to define the type of a place
enum PlaceType {
  VISITED
  WISHLIST
}